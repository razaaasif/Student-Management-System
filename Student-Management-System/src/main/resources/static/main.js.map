{"version":3,"sources":["./src/app/shared/components/spinner/spinner.component.ts","./src/app/student/edit-student.component/edit-student.component.ts","./src/app/student/edit-student.component/edit-student.component.html","./src/app/shared/utils.ts","./src/app/shared/model/user.mode.ts","./src/environments/environment.ts","./src/app/shared/services/login.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/model/student.component.model.ts","./src/app/app.module.ts","./src/app/student/student.component.ts","./src/app/student/student.component.html","./src/app/shared/services/student.service.ts","./src/app/shared/services/authentication.interceptor.ts","./src/app/shared/model/user.model.ts","./src/app/shared/services/url.interceptor.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/app-url.ts","./src/app/shared/services/error-handler.service.ts","./src/app/shared/services/spinner.service.ts","./src/app/login/new-login.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `\r\n    <div class=\"spinner-overlay\">\r\n      <div class=\"spinner\"></div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .spinner-overlay {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        z-index: 20000;\r\n      }\r\n\r\n      .spinner {\r\n        border: 4px solid #f3f3f3;\r\n        border-top: 4px solid #3498db;\r\n        border-radius: 50%;\r\n        width: 30px;\r\n        height: 30px;\r\n        animation: spin 1s linear infinite;\r\n      }\r\n\r\n      @keyframes spin {\r\n        0% {\r\n          transform: rotate(0deg);\r\n        }\r\n        100% {\r\n          transform: rotate(360deg);\r\n        }\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class SpinnerComponent {}\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  Student,\r\n  StudentModel,\r\n  StudentValidatorModel,\r\n} from '../../shared/model/student.component.model';\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { StudentService } from '../../shared/services/student.service';\r\nimport { KeyValueModel } from 'src/app/shared/model/name-value.model';\r\nimport { trimString } from 'src/app/shared/utils';\r\nimport { Subscription } from 'rxjs';\r\nimport { unSubscribeAll } from '../../shared/utils';\r\nimport { SpinnerService } from 'src/app/shared/services/spinner.service';\r\n@Component({\r\n  templateUrl: './edit-student.component.html',\r\n  styles: [\r\n    `\r\n      html,\r\n      body {\r\n        height: 100%;\r\n        margin: 0;\r\n      }\r\n\r\n      .container {\r\n        display: grid;\r\n        grid-template-rows: 1fr auto; /* The footer occupies the last row */\r\n        min-height: 100%;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class EditStudentComponent implements OnInit, OnDestroy {\r\n  public static DILAOG_CONFIG: DynamicDialogConfig = {\r\n    width: '30%',\r\n    height: '65%',\r\n    closable: true,\r\n    showHeader: false,\r\n    modal: true,\r\n    contentStyle: {\r\n      height: '110%',\r\n      overflow: 'auto',\r\n      margin: '0',\r\n      padding: '0',\r\n    },\r\n    baseZIndex: 10000,\r\n  };\r\n  public student: StudentModel;\r\n  branchs: Array<KeyValueModel> = new Array<KeyValueModel>();\r\n  public readonly trimString = trimString;\r\n  isChanged = false;\r\n  inValid = true;\r\n  subcription: Array<Subscription> = new Array<Subscription>();\r\n  pageName: string;\r\n  editMode: boolean = false;\r\n  isLoading: boolean;\r\n  constructor(\r\n    private dynamicDialog: DynamicDialogRef,\r\n    private studentService: StudentService,\r\n    private spinner: SpinnerService,\r\n    public config: DynamicDialogConfig\r\n  ) {}\r\n  ngOnDestroy(): void {\r\n    unSubscribeAll(this.subcription);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.student = this.config.data.studentModel;\r\n    this.pageName = this.config.data.pageName;\r\n    this.editMode = this.config.data.editMode;\r\n    if (this.editMode) {\r\n      setInterval(() => {\r\n        EditStudentComponent.DILAOG_CONFIG.height = '70%';\r\n      });\r\n    }\r\n    console.log('data from main : ' + JSON.stringify(this.config.data));\r\n    this.subcription.push(\r\n      this.studentService.getBranchs().subscribe((branch) => {\r\n        console.log('branch : ' + JSON.stringify(branch));\r\n        this.branchs = branch;\r\n        setTimeout(() => {\r\n          this.spinner.hide();\r\n        }, 100);\r\n      })\r\n    );\r\n  }\r\n  onClose(): void {\r\n    this.dynamicDialog.close();\r\n  }\r\n  onChange(): void {\r\n    this.isChanged = true;\r\n    this.student.validator = new StudentValidatorModel();\r\n    const validator = this.student.validator;\r\n    validator.firstName = trimString(this.student.firstName) === null;\r\n    validator.lastName = trimString(this.student.lastName) === null;\r\n    validator.branch = trimString(this.student.branch) === null;\r\n    this.inValid =\r\n      validator.firstName || validator.lastName || validator.branch;\r\n  }\r\n  save(): void {\r\n    if (this.inValid) {\r\n      return;\r\n    }\r\n    this.spinner.show();\r\n    if (!this.editMode) {\r\n      this.subcription.push(\r\n        this.studentService\r\n          .putNewStudent(new Student(this.student))\r\n          .subscribe((response) => {\r\n            console.log('Student : ' + JSON.stringify(response));\r\n            this.spinner.hide();\r\n            this.dynamicDialog.close(true);\r\n          }, (error) => {\r\n            this.spinner.hide();\r\n            console.log('Errror' + JSON.stringify(error));\r\n          })\r\n      );\r\n    } else {\r\n      this.subcription.push(\r\n        this.studentService\r\n          .putNewStudent(new Student(this.student))\r\n          .subscribe((response) => {\r\n            console.log('Student : ' + JSON.stringify(response));\r\n            this.spinner.hide();\r\n            this.dynamicDialog.close(true);\r\n          }, (error) => {\r\n            this.spinner.hide();\r\n            console.log('Errror' + JSON.stringify(error));\r\n          }\r\n      ));\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dynamicDialog.close(false);\r\n  }\r\n}\r\n","<p-toast position=\"top-right\"></p-toast>\r\n<ng-container *ngIf=\"student\">\r\n  <div class=\"container\">\r\n    <div class=\"content\">\r\n      <div class=\"flex-row space-between m-2 mb-4\">\r\n        <div class=\"font-weight-bold text-uppercase m-auto h1 text-primary\">\r\n          {{ pageName }}\r\n        </div>\r\n      </div>\r\n      <div class=\"flex-col space-between m-2 mb-2\">\r\n        <div *ngIf=\"editMode\" class=\"form-group\">\r\n          <label>Roll Number</label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"student['rollNumber']\"\r\n            class=\"form-control\"\r\n            [disabled]=\"editMode\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"student['firstName']\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"\r\n              student['validator']['firstName'] ? 'validator-error' : null\r\n            \"\r\n            (ngModelChange)=\"onChange()\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"student['lastName']\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"\r\n              student['validator']['lastName'] ? 'validator-error' : null\r\n            \"\r\n            (ngModelChange)=\"onChange()\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"student['email']\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"student['validator']['email'] ? 'validator-error' : null\"\r\n            (ngModelChange)=\"onChange()\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"flex-col mb-4\">\r\n          <label for=\"\">Branch</label>\r\n          <div class=\"flex-contents\">\r\n            <p-dropdown\r\n              class=\"flex-contents\"\r\n              [options]=\"branchs\"\r\n              [(ngModel)]=\"student['branch']\"\r\n              autoDisplayFirst=\"false\"\r\n              placeholder=\"Select Branch\"\r\n              optionLabel=\"key\"\r\n              optionValue=\"value\"\r\n              scrollHeight=\"150px\"\r\n              [showClear]=\"true\"\r\n              [styleClass]=\"\r\n                student['validator']['branch'] ? 'validator-error' : null\r\n              \"\r\n              [disabled]=\"editMode\"\r\n              (ngModelChange)=\"onChange()\"\r\n            ></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <footer class=\"footer\" style=\"display: contents\">\r\n      <button class=\"btn btn-secondary btn-lg mb-1\" (click)=\"onCancel()\">\r\n        Cancel\r\n      </button>\r\n      <button\r\n        class=\"btn btn-primary btn-lg mb-1\"\r\n        [disabled]=\"inValid\"\r\n        (click)=\"save()\"\r\n      >\r\n        Save\r\n      </button>\r\n    </footer>\r\n  </div>\r\n</ng-container>\r\n","import { Subscription } from 'rxjs';\r\n\r\nexport function isNullOrEmptyString(str: string): boolean {\r\n  return null == str || str.trim().length === 0 ? true : false;\r\n}\r\n\r\nexport function isNullOrEmptyArray<T = any>(arr: Array<T>): boolean {\r\n  return null == arr || arr.length === 0 ? true : false;\r\n}\r\n\r\nexport function trimString(str: string): string {\r\n  if (str == null) {\r\n    return null;\r\n  }\r\n  str = str.trim();\r\n  return str === '' ? null : str.trim();\r\n}\r\n\r\nexport function safeTrim(str: string): string {\r\n  if (str == null) {\r\n    return '';\r\n  }\r\n  str = str.trim();\r\n  return str.length === 0 ? '' : str;\r\n}\r\n\r\nexport function unSubscribeAll(subs: Array<Subscription>): void {\r\n  if (subs) {\r\n    subs.forEach((s) => s.unsubscribe());\r\n  }\r\n}\r\n\r\nexport function deepCopy<T, S>(obj: T): T {\r\n  let newObj: any = obj;\r\n  if ((obj && typeof obj === 'object') || obj instanceof Map) {\r\n    if (Array.isArray(obj)) {\r\n      newObj = [];\r\n      for (let index = 0; index < obj.length; index++) {\r\n        newObj[index] = deepCopy(obj[index]);\r\n      }\r\n    } else if (obj instanceof Map) {\r\n      newObj = new Map<T, S>();\r\n      for (const [key, value] of Object.entries(obj)) {\r\n        newObj.set(deepCopy(key), deepCopy(value));\r\n      }\r\n    } else {\r\n      newObj = {};\r\n      for (const [key, value] of Object.entries(obj)) {\r\n        newObj[key] = deepCopy(value);\r\n      }\r\n    }\r\n  }\r\n  return newObj;\r\n}\r\n","export class User {\r\n  username: string = null;\r\n  password: string = null;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // appUrl: 'http://student-management-system.ap-south-1.elasticbeanstalk.com',\r\n  appUrl: 'http://localhost:8080',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { env } from 'process';\r\nimport { APP_URL } from '../../app-url';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { StudentModel, Student } from '../model/student.component.model';\r\nimport { User } from '../model/user.mode';\r\nimport { UserService } from '../model/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private http: HttpClient, private userService: UserService) {\r\n  }\r\n\r\n  public login(): Observable<any> {\r\n    return this.http.get('/students');\r\n  }\r\n\r\n  public signup(user: User): Observable<any> {\r\n    return this.http.post(APP_URL.SIGN_UP, user);\r\n  }\r\n\r\n  public isValid(): Observable<boolean> {\r\n    return this.http.post<boolean>('/api/auth/isvalid', this.userService.user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from './shared/services/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './shared/model/user.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit{\r\n  constructor(private loginService: LoginService , private router: Router, private userService:UserService) { }\r\n  ngOnInit(): void {\r\n    this.loginService.isValid().subscribe((data) => {\r\n      console.log('isValid -> ' + data);\r\n      if (data) {\r\n        this.userService.isUserLoggedIn.next(data);\r\n        this.router.navigateByUrl('/students');\r\n      } else {\r\n        this.userService.removeUser();\r\n        this.router.navigateByUrl('/login');\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n","export class Student {\r\n  rollNumber?: string;\r\n  firstName: string = null;\r\n  lastName: string = null;\r\n  email: string = null;\r\n  branch: string = null;\r\n  constructor(student: StudentModel = null) {\r\n    console.log('Student const : ' + JSON.stringify(student));\r\n    if (student) {\r\n      this.firstName = student.firstName;\r\n      this.lastName = student.lastName;\r\n      this.email = student.email;\r\n      this.branch = student.branch;\r\n      if (student.rollNumber !== null) {\r\n        this.rollNumber = student.rollNumber;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class StudentValidatorModel {\r\n  firstName: boolean = false;\r\n  lastName: boolean = false;\r\n  email: boolean = false;\r\n  branch: boolean = false;\r\n}\r\nexport class StudentModel extends Student {\r\n  isNew: boolean = false;\r\n  isUpdated: boolean;\r\n  validator: StudentValidatorModel = new StudentValidatorModel();\r\n  constructor(student: StudentModel = null) {\r\n    super(student);\r\n    if (student) {\r\n      this.validator = new StudentValidatorModel();\r\n    }\r\n  }\r\n}\r\n\r\nexport class StudentPersistModel {\r\n  saveData: Array<Student> = new Array<Student>();\r\n  deleteData: Array<string> = new Array<string>();\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { RadioButtonModule } from 'primeng/radioButton';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { DialogService, DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { EditStudentComponent } from './student/edit-student.component/edit-student.component';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { MessageService } from 'primeng/api';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { SpinnerComponent } from './shared/components/spinner/spinner.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthenticationInterceptor } from './shared/services/authentication.interceptor';\r\nimport { NewLoginComponent } from './login/new-login.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { UrlInterceptor } from './shared/services/url.interceptor';\r\n\r\nconst routes: Routes = [\r\n  { path: '*',  component:AppComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'newlogin', component: NewLoginComponent },\r\n  { path: 'students', component: StudentComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StudentComponent,\r\n    EditStudentComponent,\r\n    SpinnerComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    RadioButtonModule,\r\n    ButtonModule,\r\n    CheckboxModule,\r\n    AccordionModule,\r\n    PanelModule,\r\n    TableModule,\r\n    ToolbarModule,\r\n    FileUploadModule,\r\n    NgbModule,\r\n    ButtonModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    ToastModule,\r\n    DynamicDialogModule,\r\n    DropdownModule,\r\n    PaginatorModule,\r\n    ScrollingModule,\r\n    RouterModule.forRoot(routes),\r\n  ],\r\n  providers: [\r\n    DialogService,\r\n    MessageService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UrlInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthenticationInterceptor,\r\n\r\n      multi: true,\r\n    },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { StudentService } from '../shared/services/student.service';\r\nimport {\r\n  StudentModel,\r\n  StudentPersistModel,\r\n} from '../shared/model/student.component.model';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport {\r\n  deepCopy,\r\n  isNullOrEmptyArray,\r\n  isNullOrEmptyString,\r\n} from '../shared/utils';\r\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { EditStudentComponent } from './edit-student.component/edit-student.component';\r\nimport { SpinnerService } from '../shared/services/spinner.service';\r\nimport { UserService } from '../shared/model/user.model';\r\nimport {  Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-student',\r\n  templateUrl: './student.component.html',\r\n  styles: [\r\n    `\r\n      footer {\r\n        background-color: #f5f5f5;\r\n        padding: 10px;\r\n        text-align: center;\r\n        font-size: 14px;\r\n        color: #888;\r\n      }\r\n\r\n      footer a {\r\n        color: #888;\r\n        text-decoration: none;\r\n        margin: 0 5px;\r\n      }\r\n\r\n      footer a:hover {\r\n        text-decoration: underline;\r\n      }\r\n    `,\r\n  ],\r\n  providers: [MessageService],\r\n})\r\nexport class StudentComponent implements OnInit {\r\n  @ViewChild('dt') dt: Table;\r\n\r\n  students: StudentModel[];\r\n  originalStudents: StudentModel[];\r\n  selectedStudents: StudentModel[];\r\n  filterText: string;\r\n  studentLength: string = '0';\r\n  isChanged: boolean;\r\n  isDeleted: boolean;\r\n  deletedStudent: Array<string> = new Array<string>();\r\n  hasNewItem: boolean = false;\r\n  constructor(\r\n    private http: StudentService,\r\n    private message: MessageService,\r\n    private dialog: DialogService,\r\n    private spinner: SpinnerService,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.userService.user !== null) {\r\n      this.userService.isLoggedIn = true;\r\n      this.loadData();\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n  loadData(): void {\r\n    this.spinner.show();\r\n    this.deletedStudent = new Array<string>();\r\n    this.selectedStudents = new Array<StudentModel>();\r\n    this.isChanged = false;\r\n    this.isDeleted = false;\r\n    this.hasNewItem = false;\r\n    this.http.getStudents().subscribe(\r\n      (data) => {\r\n        console.log('Students data RESPONSE ->' + JSON.stringify(data));\r\n        this.students = data.map((student) => {\r\n          const st = new StudentModel(student);\r\n          student.rollNumber = student.rollNumber;\r\n          return st;\r\n        });\r\n        this.studentLength = isNullOrEmptyArray(this.students)\r\n          ? '0'\r\n          : this.students.length + '';\r\n        this.originalStudents = deepCopy(this.students);\r\n        console.log('students after map : ' + JSON.stringify(this.students));\r\n        console.log(\r\n          'originalStudents : ' + JSON.stringify(this.originalStudents)\r\n        );\r\n        this.spinner.hide();\r\n      },\r\n      (erro) => {\r\n        this.spinner.hide();\r\n        this.students = [];\r\n        this.originalStudents = [];\r\n        console.log('Error -> ' + JSON.stringify(erro));\r\n      }\r\n    );\r\n  }\r\n\r\n  showMessage(): void {\r\n    this.message.add({\r\n      summary: 'Opeartion performed successfully.',\r\n      severity: 'success',\r\n    });\r\n  }\r\n\r\n  onFilter(filter: any): void {\r\n    console.log('onFilter : ' + JSON.stringify(filter.filteredValue));\r\n    if (isNullOrEmptyString(this.filterText)) {\r\n      return;\r\n    }\r\n    const lenth = isNullOrEmptyArray(this.students)\r\n      ? '0'\r\n      : this.students.length + '';\r\n    const filterlength = isNullOrEmptyArray(filter.filteredValue)\r\n      ? '0'\r\n      : filter.filteredValue.length + '';\r\n    this.studentLength = filterlength + '/' + lenth;\r\n    console.log('onFilter studentLength : ' + this.studentLength);\r\n  }\r\n\r\n  onChange(): void {\r\n    console.log('onChange : ' + this.filterText);\r\n    if (isNullOrEmptyString(this.filterText)) {\r\n      this.studentLength = isNullOrEmptyArray(this.students)\r\n        ? '0'\r\n        : this.students.length + '';\r\n    }\r\n  }\r\n\r\n  deleteSelectedStudents(): void {\r\n    this.isDeleted = true;\r\n    this.selectedStudents?.forEach((student, idx) => {\r\n      this.delete(student.rollNumber, idx);\r\n      this.students = this.students.filter(\r\n        (st) => st.rollNumber !== student.rollNumber\r\n      );\r\n    });\r\n    this.selectedStudents = [];\r\n    this.updateStudentCount();\r\n  }\r\n\r\n  delete(rollNumber: string, index: number): void {\r\n    this.isDeleted = true;\r\n    this.isChanged = true;\r\n    this.deletedStudent.push(rollNumber);\r\n    console.log('RollNumber : ' + rollNumber + ' , index: ' + index);\r\n    this.students?.splice(index, 1);\r\n    console.log('students ' + JSON.stringify(this.students));\r\n    this.updateStudentCount();\r\n  }\r\n  updateStudentCount(): void {\r\n    this.students = deepCopy(this.students);\r\n    this.studentLength = isNullOrEmptyArray(this.students)\r\n      ? '0'\r\n      : this.students.length + '';\r\n  }\r\n  public cancel(): void {\r\n    if (this.isChanged) {\r\n      this.students = deepCopy(this.originalStudents);\r\n      this.updateStudentCount();\r\n      this.isChanged = false;\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.spinner.show();\r\n    const toSave = new StudentPersistModel();\r\n    toSave.saveData = this.students.filter(\r\n      (student) => student.isNew || student.isUpdated\r\n    );\r\n    toSave.deleteData.push(...this.deletedStudent);\r\n    console.log('toSave : ' + JSON.stringify(toSave));\r\n\r\n    this.http.persistStudents(toSave).subscribe((response) => {\r\n      console.log('Response : ' + JSON.stringify(response));\r\n      this.showMessage();\r\n      this.isDeleted = false;\r\n      this.hasNewItem = false;\r\n      this.spinner.hide();\r\n      this.loadData();\r\n    }, (error) => {\r\n      this.spinner.hide();\r\n\r\n      console.log('Error' + JSON.stringify(error['errors']));\r\n    });\r\n  }\r\n\r\n  addNewStudent(student: StudentModel = null): void {\r\n    console.log('Edit Student Start' + JSON.stringify(student));\r\n    const config = EditStudentComponent.DILAOG_CONFIG;\r\n    const studentModel = new StudentModel(student);\r\n    const editMode = student != null;\r\n    config.data = {\r\n      editMode,\r\n      pageName: editMode ? 'Add new Student' : 'Edit Student',\r\n      studentModel,\r\n    };\r\n    const ref: DynamicDialogRef = this.dialog.open(\r\n      EditStudentComponent,\r\n      EditStudentComponent.DILAOG_CONFIG\r\n    );\r\n    ref.onClose.subscribe((data) => {\r\n      if (data) {\r\n        this.showMessage();\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p-toast position=\"top-right\"></p-toast>\r\n<div class=\"card\">\r\n  <p-toolbar styleClass=\"p-mb-4\">\r\n    <ng-template pTemplate=\"left\">\r\n      <button class=\"btn btn-primary btn-lg\" (click)=\"addNewStudent()\">\r\n        <em class=\"fas fa-plus mr-2\"></em>Add New Student\r\n      </button>\r\n      <button\r\n        class=\"btn btn-secondary btn-lg ml-2\"\r\n        (click)=\"deleteSelectedStudents()\"\r\n        [disabled]=\"!selectedStudents || !selectedStudents.length\"\r\n      >\r\n        <em class=\"fas fa-trash mr-2\"></em>Delete Selected Students\r\n      </button>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"right\">\r\n      <div class=\"row space-between mr-2\">\r\n        <button\r\n          (click)=\"cancel()\"\r\n          [disabled]=\"!isChanged\"\r\n          type=\"button\"\r\n          class=\"btn btn btn-outline-secondary btn-lg border-dark\"\r\n        >\r\n          <em class=\"fas fa-redo mr-2\"></em>Cancel\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-primary btn-lg ml-2\"\r\n          [disabled]=\"!isChanged\"\r\n          (click)=\"save()\"\r\n        >\r\n          <em class=\"fas fa-save mr-2\"></em>Save\r\n        </button>\r\n      </div>\r\n    </ng-template>\r\n  </p-toolbar>\r\n\r\n  <p-table\r\n    #dt\r\n    [value]=\"students\"\r\n    [globalFilterFields]=\"['rollNumber', 'firstName', 'lastName', 'email']\"\r\n    [tableStyle]=\"{ 'min-width': '40rem' }\"\r\n    [(selection)]=\"selectedStudents\"\r\n    [rowHover]=\"true\"\r\n    dataKey=\"rollNumber\"\r\n    (onFilter)=\"onFilter($event)\"\r\n    [scrollable]=\"true\"\r\n    scrollHeight=\"38rem\"\r\n    [scrollable]=\"true\"\r\n    (onFilter)=\"onFilter($event)\"\r\n  >\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"flex align-items-center justify-content-between\">\r\n        <h5 class=\"m-0\">Students&nbsp;({{ studentLength }})</h5>\r\n        <span class=\"p-input-icon-left\">\r\n          <i class=\"pi pi-search\"></i>\r\n          <input\r\n            pInputText\r\n            [(ngModel)]=\"filterText\"\r\n            type=\"text\"\r\n            (input)=\"\r\n              dt.filterGlobal($event.target.value, 'contains');\r\n              onChange($event.target.value)\r\n            \"\r\n            placeholder=\"Search...\"\r\n            class=\"p-inputtext p-component p-element\"\r\n            (ngModelChange)=\"onChange()\"\r\n            style=\"\r\n              width: 30rem;\r\n              padding: px;\r\n              padding: 8px 8px 8px 30px !important;\r\n              border-radius: 15px;\r\n            \"\r\n          />\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"header\">\r\n      <tr class=\"flex-column\">\r\n        <th style=\"width: 8%\" class=\"text-center\">\r\n          <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n        </th>\r\n        <th style=\"width: 17%\" pSortableColumn=\"rollNumber\">\r\n          <div class=\"flex-row space-between\">\r\n            Roll Number\r\n            <p-sortIcon field=\"rollNumber\"></p-sortIcon>\r\n          </div>\r\n        </th>\r\n        <th style=\"width: 17%\" pSortableColumn=\"firstName\">\r\n          <div class=\"flex-row space-between\">\r\n            First Name <p-sortIcon field=\"firstName\"></p-sortIcon>\r\n          </div>\r\n        </th>\r\n        <th style=\"width: 17%\" pSortableColumn=\"lastName\">\r\n          <div class=\"flex-row space-between\">\r\n            Last Name <p-sortIcon field=\"lastName\"></p-sortIcon>\r\n          </div>\r\n        </th>\r\n        <th style=\"width: 17%\" pSortableColumn=\"email\">\r\n          <div class=\"flex-row space-between\">\r\n            Email <p-sortIcon field=\"email\"></p-sortIcon>\r\n          </div>\r\n        </th>\r\n\r\n        <th style=\"width: 17%\" class=\"text-center\">Actions</th>\r\n      </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"body\" let-student let-index=\"rowIndex\">\r\n      <tr>\r\n        <td class=\"text-center\" style=\"width: 8.5%\">\r\n          <p-tableCheckbox [value]=\"student\"></p-tableCheckbox>\r\n        </td>\r\n        <td>{{ student[\"rollNumber\"] }}</td>\r\n        <td>{{ student.firstName }}</td>\r\n        <td>{{ student.lastName }}</td>\r\n        <td>{{ student.email }}</td>\r\n\r\n        <td class=\"text-center\">\r\n          <button\r\n            pButton\r\n            pRipple\r\n            icon=\"pi pi-pencil\"\r\n            class=\"p-button-rounded p-button-success mr-2\"\r\n            (click)=\"addNewStudent(student)\"\r\n          ></button>\r\n          <button\r\n            pButton\r\n            pRipple\r\n            icon=\"pi pi-trash\"\r\n            class=\"p-button-rounded p-button-warning\"\r\n            (click)=\"delete(student.rollNumber, index)\"\r\n          ></button>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr\r\n        *ngIf=\"students == null || students?.length < 1 || filterText != null\"\r\n      >\r\n        <td [attr.colspan]=\"6\" class=\"text-left ml-4\">\r\n          <span style=\"color: #b81717 !important\">\r\n            {{\r\n              filterText == null\r\n                ? \" No Student has been Configured.\"\r\n                : \"No student has been found.\"\r\n            }}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n<footer class=\"footer\">\r\n  <p class=\"m-0 p-2\">\r\n    &copy; 2023 Student Management System. All rights reserved. |\r\n    <a href=\"#\">Privacy Policy</a> |\r\n    <a href=\"#\">Terms of Service</a>\r\n  </p>\r\n</footer>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport {\r\n  Student,\r\n  StudentModel,\r\n  StudentPersistModel,\r\n} from '../model/student.component.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { MesssageResponse } from '../model/messsage-response.model';\r\nimport { APP_URL } from '../../app-url';\r\nimport { KeyValueModel } from '../model/name-value.model';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StudentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getStudents(): Observable<Array<StudentModel>> {\r\n    return this.http\r\n      .get<Array<Student>>(APP_URL.STUDENTS)\r\n      .pipe(map((response: any) => response._embedded.students));\r\n  }\r\n\r\n  getBranchs(): Observable<Array<KeyValueModel>> {\r\n    return this.http.get<Array<KeyValueModel>>(\r\n    APP_URL.BRANCHS\r\n    );\r\n  }\r\n\r\n  persistStudents(toSave: StudentPersistModel): Observable<MesssageResponse> {\r\n    return this.http.put<MesssageResponse>(\r\n    APP_URL.SAVE_STUDENTS,\r\n      toSave\r\n    );\r\n  }\r\n\r\n  putNewStudent(student: Student): Observable<StudentModel> {\r\n    console.log('putNewStudent : ' + JSON.stringify(student));\r\n    return this.http.post<StudentModel>(\r\n    APP_URL.NEW_STUDENT,\r\n      student\r\n    );\r\n  }\r\n\r\n  updateStudent(student: Student): Observable<StudentModel> {\r\n    console.log('updateStudent : ' + JSON.stringify(student));\r\n    return this.http.put<StudentModel>(\r\n     APP_URL.NEW_STUDENT,\r\n      student\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { UserService } from '../model/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root', // or specify a specific module\r\n})\r\nexport class AuthenticationInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private useService: UserService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    console.log(\r\n      'Interceptor : ' +\r\n        this.useService.getUsername() +\r\n        ', ' +\r\n        this.useService.getPassword()\r\n    );\r\n    if (\r\n      !this.useService.isSignupRequest &&\r\n      this.useService.getUsername() &&\r\n      this.useService.getPassword()\r\n    ) {\r\n      const newReq = req.clone({\r\n        setHeaders: {\r\n          Authorization:\r\n            'Basic ' +\r\n            window.btoa(\r\n              this.useService.getUsername() +\r\n                ':' +\r\n                this.useService.getPassword()\r\n            ),\r\n        },\r\n      });\r\n      console.log('URL req -> ' + req.url);\r\n      console.log('URL newReq -> ' + newReq.url);\r\n\r\n      return next.handle(newReq)\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user.mode';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  removeUser() {\r\n    this.isUserLoggedIn.next(false);\r\n    sessionStorage.removeItem('userDetail');\r\n    this.user = new User();\r\n  }\r\n  public user: User;\r\n  public isUserLoggedIn: Subject<boolean> = new Subject<boolean>();\r\n  public isLoggedIn: boolean = false;\r\n  isSignupRequest: boolean;\r\n  constructor() {\r\n    this.isUserLoggedIn.subscribe((loggedin) => (this.isLoggedIn = loggedin));\r\n    const temp: User = JSON.parse(sessionStorage.getItem('userDetail'));\r\n    console.log('UserService constructor : ' + JSON.stringify(temp));\r\n    this.user = new User();\r\n    if (temp !== null) {\r\n      this.user = new User();\r\n      this.user.username = temp?.username;\r\n      this.user.password = temp?.password;\r\n    }\r\n  }\r\n\r\n  setUserPassword(username: string, password: string): void {\r\n    console.log(\r\n      'UserService setUserPassword user : ' + password + ' pass : ' + password\r\n    );\r\n\r\n    const tempUser = { username: username, password: password };\r\n    sessionStorage.setItem('userDetail', JSON.stringify(tempUser));\r\n\r\n    this.user.username = username;\r\n    this.user.password = password;\r\n  }\r\n  getUsername(): string {\r\n    return this.user.username;\r\n  }\r\n  getPassword(): string {\r\n    return this.user.password;\r\n  }\r\n}\r\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ErrorHandlingService } from './error-handler.service';\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class UrlInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private errorHandlingService : ErrorHandlingService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const modifiedReq = req.clone({\r\n      url: !environment.production ? environment.appUrl + req.url : req.url,\r\n    });\r\n    return next.handle(modifiedReq).pipe(\r\n        catchError((errorResponse: HttpErrorResponse) => {\r\n          this.errorHandlingService.handleHttpError(errorResponse);\r\n          return throwError(errorResponse);\r\n        })\r\n      );;\r\n  }\r\n}\r\n","<div *ngIf=\"isLogin\" class=\"flex-row space-between p-2 bg-dark\">\r\n  <div class=\"flex mr-auto\">\r\n    <a class=\"header text-center\" routerLink=\"/\">Student Management System</a>\r\n  </div>\r\n  <div class=\"flex-row\">\r\n    <ul class=\"flex-row\">\r\n      <li>\r\n        <a routerLink=\"/students\">Add Student</a>\r\n      </li>\r\n\r\n      <li>\r\n        <a routerLink=\"/students\">Student Details</a>\r\n      </li>\r\n      <li>\r\n        <a routerLink=\"/students\">About</a>\r\n      </li>\r\n\r\n      <li>\r\n        <a routerLink=\"/login\" (click)=\"logout()\">Logout</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/model/user.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  isLogin: any;\r\n  constructor(public userService: UserService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.isUserLoggedIn.subscribe(\r\n      (login) => (this.isLogin = login)\r\n    );\r\n  }\r\n\r\n  logout(): void {\r\n    this.userService.removeUser();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","export enum APP_URL {\r\n  STUDENTS = '/students',\r\n  SAVE_STUDENTS = '/api/students',\r\n  BRANCHS = '/api/commons/branch',\r\n  NEW_STUDENT = '/students',\r\n  SIGN_UP = '/api/auth/register',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ErrorHandlingService {\r\n  constructor(private messageService: MessageService) {}\r\n\r\n  handleHttpError(errorResponse: HttpErrorResponse) {\r\n    if (errorResponse.status === 400) {\r\n      const errorMessages = this.extractErrorMessages(errorResponse.error);\r\n      this.showMessages(errorMessages);\r\n    }\r\n  }\r\n\r\n  private extractErrorMessages(error: any): string[] {\r\n  const fieldMapping = {\r\n    lastName: 'Last Name',\r\n    firstName: 'First Name',\r\n    email: 'Email',\r\n    name: 'Name',\r\n    password: 'Password'\r\n    // Add more field mappings if needed\r\n  };\r\n    const errorMessages = [];\r\n    for (const key in error.errors) {\r\n      if (error.errors.hasOwnProperty(key)) {\r\n        const field = fieldMapping[key] || key; // Use the mapped name if available, otherwise use the key\r\n        errorMessages.push(`${field}: ${error.errors[key]}`);\r\n      }\r\n    }\r\n    return errorMessages;\r\n  }\r\n\r\n  private showMessages(errorMessages: string[]) {\r\n    if (errorMessages && errorMessages.length > 0) {\r\n      errorMessages.forEach((message) => {\r\n        this.messageService.add({ severity: 'error', detail: message + '.' });\r\n      });\r\n    }\r\n    else {\r\n      this.messageService.add({ severity: 'error', detail: 'Something went wrong.' });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Injectable,\r\n  ComponentRef,\r\n  ComponentFactoryResolver,\r\n  ApplicationRef,\r\n  Injector,\r\n} from '@angular/core';\r\nimport { SpinnerComponent } from '../components/spinner/spinner.component';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SpinnerService {\r\n  private spinnerRef: ComponentRef<SpinnerComponent>;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private appRef: ApplicationRef,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  show(): void {\r\n    if (!this.spinnerRef) {\r\n      const componentFactory =\r\n        this.componentFactoryResolver.resolveComponentFactory(SpinnerComponent);\r\n      this.spinnerRef = componentFactory.create(this.injector);\r\n      this.appRef.attachView(this.spinnerRef.hostView);\r\n      const spinnerElement = (this.spinnerRef.hostView as any)\r\n        .rootNodes[0] as HTMLElement;\r\n      document.body.appendChild(spinnerElement);\r\n    }\r\n  }\r\n\r\n  hide(): void {\r\n    setTimeout(() => {\r\n      if (this.spinnerRef) {\r\n        this.appRef.detachView(this.spinnerRef.hostView);\r\n        this.spinnerRef.destroy();\r\n        this.spinnerRef = null;\r\n      }\r\n    }, 1000);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div\r\n      class=\"vh-100 d-flex justify-content-center align-items-center\"\r\n      style=\"min-width: 100rem;\"\r\n    >\r\n      <div class=\"container\">\r\n        <div class=\"row d-flex justify-content-center\">\r\n          <div class=\"flex-col\">\r\n            <div class=\"border border-3 border-primary\"></div>\r\n            <div class=\"card bg-white shadow-lg\">\r\n              <div class=\"card-body p-5\">\r\n                <div class=\"mb-3 mt-md-4\">\r\n                  <h2 class=\"fw-bold mb-4 mt-1 text-uppercase \">\r\n                    Student Management System\r\n                  </h2>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"username\" class=\"form-label \">Username</label>\r\n                    <input\r\n                      type=\"username\"\r\n                      class=\"form-control\"\r\n                      id=\"username\"\r\n                      placeholder=\"Please enter your username\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"password\" class=\"form-label \">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      class=\"form-control\"\r\n                      id=\"password\"\r\n                      placeholder=\"*******\"\r\n                    />\r\n                  </div>\r\n                  <p class=\"small\">\r\n                    <a class=\"text-primary\" href=\"#\">Forgot password?</a>\r\n                  </p>\r\n                  <div class=\"d-grid\">\r\n                    <button class=\"btn btn-primary btn-lg btn-block\">\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p class=\"mb-0  text-center\">\r\n                    Don't have an account?\r\n                    <a href=\"#\" class=\"text-primary fw-bold\">Sign Up</a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [``],\r\n})\r\nexport class NewLoginComponent {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { LoginService } from '../shared/services/login.service';\r\nimport { SpinnerService } from '../shared/services/spinner.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../shared/model/user.model';\r\nimport { User } from '../shared/model/user.mode';\r\nimport { Subscription } from 'rxjs';\r\nimport { MessageService } from 'primeng/api';\r\nimport { safeTrim, trimString } from '../shared/utils';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  public username: string = null;\r\n  public password: string = null;\r\n  readonly safeTrim = safeTrim;\r\n  public label: string = 'Please enter your username and password';\r\n  usernameabel: string = 'Enter your username';\r\n  public loginLable = 'Login';\r\n  public signUp: boolean = false;\r\n  private sub: Subscription;\r\n  createSuccess: boolean;\r\n  isChanged: boolean = false;\r\n  constructor(\r\n    private http: LoginService,\r\n    private spinner: SpinnerService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private message: MessageService\r\n  ) {}\r\n  ngOnDestroy(): void {\r\n    this.sub?.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  public isValid(): boolean {\r\n    return !(\r\n      this.username != null &&\r\n      this.username.length >= 5 &&\r\n      this.password != null &&\r\n      this.password.length >= 5\r\n    );\r\n  }\r\n\r\n  public createUser(): void {\r\n    this.reset();\r\n    this.signUp = true;\r\n    this.loginLable = 'Ok';\r\n    this.label = 'Enter your Username and password to sign up.';\r\n    this.usernameabel = 'Enter atleast 5 characters username';\r\n  }\r\n  reset() {\r\n    this.username = null;\r\n    this.password = null;\r\n  }\r\n\r\n  showMessage(): void {\r\n    this.message.add({\r\n      summary: 'User created successfully : ' + this.username,\r\n      severity: 'success',\r\n    });\r\n  }\r\n\r\n  showLoginError(): void {\r\n    this.message.add({\r\n      summary: 'Wrong username or password',\r\n      severity: 'error',\r\n    });\r\n  }\r\n  public signIn(): void {\r\n    this.reset();\r\n\r\n    this.signUp = false;\r\n    this.label = 'Enter your Username and password to sign in.';\r\n    this.usernameabel = 'Enter your username';\r\n    this.loginLable = 'Login';\r\n  }\r\n  selectMethod(): void {\r\n    console.log('selectMethod signup ' + JSON.stringify(this.signUp));\r\n\r\n    if (this.signUp) {\r\n      this.createUSerInfo();\r\n    } else {\r\n      this.login();\r\n    }\r\n  }\r\n  createUSerInfo(): void {\r\n    this.userService.isSignupRequest = true;\r\n    this.spinner.show();\r\n    this.sub = this.http.signup(this.user()).subscribe(\r\n      (data) => {\r\n        this.showMessage();\r\n        console.log(this.username + ':' + this.password);\r\n        console.log('createUSerInfo signup ' + JSON.stringify(data));\r\n        this.createSuccess = true;\r\n        this.signUp = false;\r\n        this.userService.isSignupRequest = false;\r\n        this.signIn();\r\n        this.spinner.hide();\r\n      },\r\n      (erro) => {\r\n        console.log('createUSerInfo Err -> ' + JSON.stringify(erro));\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n  user(): User {\r\n    return { username: this.username, password: this.password };\r\n  }\r\n\r\n  onChange() {\r\n    console.log('onChange()');\r\n    this.isChanged = true;\r\n  }\r\n\r\n  login(): void {\r\n    console.log('login user ' + this.username + ', pass ' + this.password);\r\n    this.userService.setUserPassword(this.username, this.password);\r\n    this.spinner.show();\r\n    const resp = this.http.login().subscribe(\r\n      (data) => {\r\n        console.log('data login ' + JSON.stringify(data));\r\n        console.log(this.username + ':' + this.password);\r\n        this.spinner.hide();\r\n        this.showMessage();\r\n        this.userService.isUserLoggedIn.next(true);\r\n        console.log('data login ' + JSON.stringify(data));\r\n        this.router.navigate(['/students']);\r\n      },\r\n      (erro) => {\r\n        console.log('Error -> ' + JSON.stringify(erro));\r\n        if (erro['status'] === 404) {\r\n          this.showLoginError();\r\n          this.userService.isUserLoggedIn.next(false);\r\n          this.router.navigate(['/login']);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<p-toast position=\"top-right\"></p-toast>\r\n<div class=\"vh-100 d-flex justify-content-center align-items-center\" style=\"min-width: 100rem\">\r\n  <div class=\"container\">\r\n    <div class=\"row d-flex justify-content-center\">\r\n      <div class=\"flex-col\">\r\n        <div class=\"border border-3 border-primary\"></div>\r\n        <div class=\"card bg-white shadow-lg\">\r\n          <div class=\"card-body p-5\">\r\n            <div class=\"mb-3 mt-md-4\">\r\n              <h2 class=\"fw-bold mb-4 mt-1 text-uppercase\">\r\n                Student Management System\r\n              </h2>\r\n              <div *ngIf=\"createSuccess; else elseLog\" class=\"p-3 mb-2 bg-success text-white\">\r\n                User created succussfully please login .\r\n              </div>\r\n\r\n              <ng-template #elseLog>\r\n                <p class=\"text-secondary\">{{ label }}</p>\r\n              </ng-template>\r\n\r\n              <div class=\"mb-3 needs-validation\">\r\n                <label for=\"username\" class=\"form-label\">Username</label>\r\n                <input #userInput type=\"username\" class=\"form-control\" id=\"admin\" [placeholder]=\"usernameabel\"\r\n                  [(ngModel)]=\"username\"\r\n               />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"password\" class=\"form-label\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"admin\" [placeholder]=\"\r\n                    signUp ? 'Enter atleast 5 characters password' : '*******'\r\n                  \" [(ngModel)]=\"password\" />\r\n\r\n\r\n              </div>\r\n              <!-- <p class=\"small\">\r\n                <a class=\"text-primary\" href=\"#\">Forgot password?</a>\r\n              </p> -->\r\n              <div class=\"d-grid\">\r\n                <button class=\"btn btn-primary btn-lg btn-block\" (click)=\"selectMethod()\" [disabled]=\"isValid()\">\r\n                  {{ loginLable }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p *ngIf=\"!signUp; else elseblock\" class=\"mb-0 text-center\">\r\n                Don't have an account?&nbsp;\r\n                <button href=\"#\" class=\"btn btn-info\" (click)=\"createUser()\">\r\n                  Sign Up\r\n                </button>\r\n              </p>\r\n              <ng-template #elseblock>\r\n                <p class=\"mb-0 text-center\">\r\n                  Already have an account? &nbsp;\r\n                  <button href=\"#\" class=\"btn btn-info\" (click)=\"signIn()\">\r\n                    Sign In\r\n                  </button>\r\n                </p>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}